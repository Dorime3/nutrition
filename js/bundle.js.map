{"version":3,"sources":["webpack://nutrition-main/./js/modules/calc.js","webpack://nutrition-main/./js/modules/cards.js","webpack://nutrition-main/./js/modules/forms.js","webpack://nutrition-main/./js/modules/modal.js","webpack://nutrition-main/./js/modules/slider.js","webpack://nutrition-main/./js/modules/tabs.js","webpack://nutrition-main/./js/modules/timer.js","webpack://nutrition-main/./js/services/services.js","webpack://nutrition-main/webpack/bootstrap","webpack://nutrition-main/webpack/runtime/define property getters","webpack://nutrition-main/webpack/runtime/hasOwnProperty shorthand","webpack://nutrition-main/webpack/runtime/make namespace object","webpack://nutrition-main/./js/script.js"],"names":[],"mappings":"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CA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;ACjDrB,iBAAiB,qFAAqF;AACtG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;;AAEjE;AACA;;AAEA;AACA,gCAAgC,cAAc;AAC9C,kCAAkC,WAAW;AAC7C,KAAK;AACL;AACA;AACA;;AAEA,wDAAwD;;AAExD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA,iCAAiC;AACjC,KAAK;;AAEL,uCAAuC;AACvC,8CAA8C;AAC9C,4CAA4C;;AAE5C;AACA;AACA;AACA;;AAEA;AACA,iCAAiC;AACjC,sCAAsC,WAAW;AACjD,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qEAAqE;AACrE;AACA,SAAS;AACT;AACA;AACA,qDAAqD,OAAO,KAAK;;AAEjE,0CAA0C;AAC1C;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;;AAEA,KAAK;;AAEL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,qDAAqD,OAAO;;AAE5D;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;;AAEA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;;AAEA;AACA,yDAAyD,OAAO;;AAEhE;AACA,SAAS;AACT,KAAK;;AAEL;;AAEA;AACA,uCAAuC,cAAc;AACrD,YAAY;AACZ;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,WAAW;AACxD,gBAAgB;AAChB;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY;;AAEZ;AACA;AACA,YAAY;;AAEZ;;AAEA,iEAAe,MAAM,E;;;;;;;;;;;;;;ACrMrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;;AAET;;AAEA,iEAAe,IAAI,E;;;;;;;;;;;;;;ACzCnB;AACA;;AAEA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC;AAClC;AACA,2BAA2B,IAAI;AAC/B,aAAa;AACb;AACA;AACA;;AAEA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;;AAEA,2CAA2C;AAC3C;;AAEA,oCAAoC;AACpC,8C;;AAEA,oD;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA,+BAA+B;;AAE/B;;AAEA,iEAAe,KAAK,E;;;;;;;;;;;;;;;ACpDpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,IAAI,YAAY,WAAW;AAC1E;AACA;AACA;;;AAGkB;;;;;;;UCrBlB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;;;;;;ACNkC;AACE;AACE;AACF;AACA;AACA;AACF;AACG;;;AAGrC;AACA,yCAAyC,oDAAI;;AAE7C,IAAI,sDAAI;AACR,IAAI,uDAAK;AACT,IAAI,wDAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,uDAAK;AACT,IAAI,uDAAK;AACT,IAAI,uDAAK;AACT,IAAI,sDAAI;AACR,CAAC","file":"bundle.js","sourcesContent":["function calc() {\r\n    // Calc\r\n\r\n    const result = document.querySelector('.calculating__result span'); // получаем результат подсчета ккал и выводим на страницу\r\n    let sex, height, weight, age, ratio; // задаем динамические переменные, которые мы получим от пользователя со страницы\r\n\r\n    if (localStorage.getItem('sex')) { // получаем значение из localStorage, если есть - \r\n        sex = localStorage.getItem('sex'); // то присваиваем это значение в переменную\r\n    } else { // если нет - \r\n        sex = 'female'; // устанавливаем женщину по умолчанию\r\n        localStorage.setItem('sex', sex); // и заносим ее в localStorage\r\n    }\r\n\r\n    if (localStorage.getItem('ratio')) { // аналогично для активности жизнедеятельности\r\n        ratio = localStorage.getItem('ratio');\r\n    } else {\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', ratio);\r\n    }\r\n\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function calcTotal() { // функция для подсчета ккал\r\n        if (!sex || !height || !weight || !height || !age || !ratio) { // проверяем, если хоть одно значение пустое (а если пустое то это - false)\r\n            result.textContent = '0000'; // то прописываем результат - 0000 и выходим из функции\r\n            return;\r\n        }\r\n        if (sex === 'female') { // если пол - женский, то формула подсчета ккал следующая\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else { // если мужской - \r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n\r\n    }\r\n    calcTotal(); // вызываем \r\n\r\n    function initLocalSettings(selector, activeClass) { // функция для назначения класса активности наших кнопок из localStorage(1аргумент - уникальный идентификатор или класс наших элементов, 2арг - класс активности)\r\n        const elements = document.querySelectorAll(selector); // получаем массив наших элементов\r\n        elements.forEach(elem => { // перебираем \r\n            elem.classList.remove(activeClass); // удаляем у каждого класс активности\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) { // перебираем, и если значение атрибута совпадает со значением из localStorage\r\n                elem.classList.add(activeClass); // Добавляем ему класс активности\r\n            }\r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')){ // аналогично для атрибута активности ЖД\r\n                elem.classList.add(activeClass);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    function getStaticInformation(selector, activeClass) { // функция для назначения класса активности кнопок по нажатию на них(1аргумент - уникальный идентификатор или класс наших элементов, 2арг - класс активности)\r\n        const elements = document.querySelectorAll(selector); // получаем массив с элементами\r\n\r\n        elements.forEach(elem => { // каждому элементу массива\r\n            elem.addEventListener('click', (e) => { // вешаем событие по клику, передаем елемент (делегирование событий)\r\n                if (e.target.getAttribute('data-ratio')) { // если выбранный элемент имеет атрибут data-ratio\r\n                    ratio = +e.target.getAttribute('data-ratio'); // то присваиваем ему числовое свойство в переменную активности ЖД\r\n                    localStorage.setItem('ratio', ratio); // и заносим его в localStorage \r\n                } else {\r\n                    sex = e.target.getAttribute('id'); // если такого атрибута нет - то получаем значение id и записываем его в переменную гендера\r\n                    localStorage.setItem('sex', sex); // заносим в localStorage\r\n                }\r\n    \r\n                elements.forEach(elem => { // очищаем каждый элемент от класса активности\r\n                    elem.classList.remove(activeClass);\r\n                });\r\n                e.target.classList.add(activeClass); // выбранному элементу добавляем класс активности\r\n                calcTotal(); // подсчитываем результат после каждого клика мыши\r\n            })\r\n        })\r\n    }\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active'); // вызываем, передаем первым аргументом элементы, вторым - класс активности\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function getDinamicInformation(selector) { // функция для ввода числовых значений в поля ввода (инпуты)\r\n        const input = document.querySelector(selector); // получаем элемент в переменную\r\n\r\n        input.addEventListener('input', () => { // вешаем событие на инпуты\r\n            if (input.value.match(/\\D/g)) { // условие, берем значение инпута, ищем НЕчисла, глобально - если находит - получаем значение true, тогда выполняется следующее условие:\r\n                input.style.border = '1px solid red'; // берем инпут и красим бордер в красный цвет\r\n            } else {\r\n                input.style.border = 'none'; // если не находит то обратно убираем бордер\r\n            }\r\n            switch(input.getAttribute('id')) { // условием проверяем, если инпут иммет атрибут id\r\n                case 'height': // высоты - присваиваем значение высоты в переменную высоты (не забываем унарный оператор \"+\")\r\n                    height = +input.value;\r\n                    break;\r\n                case 'weight':// аналогично\r\n                    weight = +input.value;\r\n                    break;\r\n                case 'age':// аналогично\r\n                    age = +input.value;\r\n                    break;\r\n            }\r\n            calcTotal() // вызываем после каждого события перерасчет ккал\r\n        })\r\n    }\r\n\r\n    getDinamicInformation('#height'); //вызываем функцию со значением id \r\n    getDinamicInformation('#weight'); //\r\n    getDinamicInformation('#age'); // \r\n}\r\n\r\n\r\nexport default calc;","import getResource from '../services/services';\r\n\r\nfunction cards() {\r\n        // cards\r\n\r\n        class MenuCard { // задаем класс для карточек\r\n            constructor (src, alt, title, subtitle, price, parentElement, ...classes) { // последний аргумент это rest оператор, образует массив с аргументами\r\n                this.src = src, // определяем аргументы через контекст вызова\r\n                this.alt = alt,\r\n                this.title = title,\r\n                this.subtitle = subtitle,\r\n                this.price = price,\r\n                this.parentElement = document.querySelector(parentElement), // также задаем родительский элемент, чтобы поместить в него нашу карточку\r\n                this.classes = classes;\r\n            }\r\n            render() { // Задаем метод\r\n                const element = document.createElement('div');  // создаем див\r\n                if (this.classes.length === 0) {\r\n                    element.classList.add('menu__item'); // если массив пустой, присваиваем аргумент по умолчанию\r\n                } else {\r\n                    this.classes.forEach(item => element.classList.add(item)); // если нет, то перебираем и присваиваем каждый к нашему элементу\r\n                }\r\n    \r\n                element.innerHTML = ` \r\n                    <img src=${this.src} alt=${this.alt}>\r\n                    <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                    <div class=\"menu__item-descr\">${this.subtitle}</div>\r\n                    <div class=\"menu__item-divider\"></div>\r\n                    <div class=\"menu__item-price\">\r\n                        <div class=\"menu__item-cost\">Цена:</div>\r\n                        <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                    </div>\r\n                `; // выводим элемент на страницу, присваиваем в верстку наши переменные через контекст вызова, которые мы определили в классе\r\n                this.parentElement.append(element); // помещаем элемент внутрь родителя\r\n            }\r\n        }\r\n    \r\n\r\n    \r\n        axios.get('http://localhost:3000/menu')\r\n        .then(data => {        \r\n            data.data.forEach(({img, altimg, title, descr, price}) => {\r\n            new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n            });\r\n        });\r\n    \r\n        // getResource('http://localhost:3000/menu')\r\n        // .then(data => {\r\n            // data.forEach(({img, altimg, title, descr, price}) => {\r\n            //     new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n        //     })\r\n        // })\r\n    \r\n        // getResource('http://localhost:3000/menu')\r\n        // .then(data => createCard(data));\r\n    \r\n        // function createCard(data) {\r\n        //     data.forEach(({img, altimg, title, descr, price}) => {\r\n        //         const element = document.createElement('div');\r\n        //         element.classList.add('menu__item');\r\n        //         element.innerHTML = `\r\n        //             <img src=${img} alt=${altimg}>\r\n        //             <h3 class=\"menu__item-subtitle\">${title}</h3>\r\n        //             <div class=\"menu__item-descr\">${descr}</div>\r\n        //             <div class=\"menu__item-divider\"></div>\r\n        //             <div class=\"menu__item-price\">\r\n        //                 <div class=\"menu__item-cost\">Цена:</div>\r\n        //                 <div class=\"menu__item-total\"><span>${price}</span> грн/день</div>\r\n        //             </div>\r\n        //         `;\r\n    \r\n        //         document.querySelector('.menu .container').append(element);\r\n        //     })\r\n        // }\r\n    \r\n}\r\n\r\nexport default cards;","import {close, open} from './modal';\r\nimport {postData} from '../services/services';\r\n\r\nfunction forms(formSelector, timerOpenId) {\r\n        // Forms\r\n\r\n        const forms = document.querySelectorAll(formSelector); // получаем формы с idex.html\r\n\r\n        const message = { // объект с необходимыми для нас сообщениями\r\n            loading: 'img/form/spinner.svg',\r\n            success: 'Спасибо! Скоро мы с вами свяжемся',\r\n            failure: 'Что-то пошло не так...'\r\n        };\r\n    \r\n        forms.forEach(item => { // перебираем формы и для каждой запускаем функцию postData\r\n            bindPostData(item);\r\n        });\r\n    \r\n    \r\n        function bindPostData(form) { // \r\n            form.addEventListener('submit', (e) => { // событие по нажатию кнопки\r\n                e.preventDefault(); // обязательно задаем переменную и отменяем привычное поведение. Тк если этого не сделать страница будет перезагружаться\r\n    \r\n                const statusMessage = document.createElement('img'); // создаем элемент (имг)\r\n                statusMessage.src = message.loading;\r\n                statusMessage.style.cssText = `\r\n                    display:block;\r\n                    margin: 0 auto;\r\n                `; // стилизуем\r\n                form.insertAdjacentElement('afterend', statusMessage); // помещаем наш элемент в форму\r\n    \r\n                // const request = new XMLHttpRequest(); // делаем запрос\r\n                // request.open('POST', 'server.php'); // говорим что запрос имеет форму POST и куда отсылать данные\r\n    \r\n                // // request.setRequestHeader('Content-type', 'multipart/form-data'); когда создаем запрос через XMLHttpRequest() и затем отправляем его методом FormData() заголовок (setRequestHeader('Content-type', 'multipart/form-data')) создавать не нужно!\r\n                const formData = new FormData(form); // FormData метод отправки запроса \r\n    \r\n                const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n    \r\n    \r\n                postData('http://localhost:3000/requests', json)\r\n                .then((data) => {\r\n                        console.log(data); // data -это те данные которые нам вернул сервер, которые мы определяем как аргумент и передаем\r\n                        showThanksModal(message.success);  \r\n                        statusMessage.remove();\r\n                }).catch(() => {\r\n                    showThanksModal(message.failure);\r\n                }).finally(() => {\r\n                    form.reset();\r\n                });\r\n                // request.send(formData); // send - отправляем\r\n    \r\n                // request.addEventListener('load', () => { // событие после загрузки\r\n                //     if (request.status === 200) { // если запрос.статус - все ок\r\n                //         console.log(request.response); // выводим ответ (объект) - необязательно\r\n                //         showThanksModal(message.success); // выводим сообщение о том, что все прошло успешно\r\n                //         form.reset(); // очищаем форму\r\n                //         statusMessage.remove();\r\n                //     } else {\r\n                //         showThanksModal(message.failure); // выводим, если чтото пошло не так\r\n                //     }\r\n                // })\r\n            });\r\n        }\r\n    \r\n        function showThanksModal(message) {\r\n            const prevModalDialog = document.querySelector('.modal__dialog');\r\n            prevModalDialog.classList.add('hide');\r\n            open('.modal', timerOpenId);\r\n            const thanksModal = document.createElement('div');\r\n            thanksModal.classList.add('modal__dialog');\r\n            thanksModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div data-close class=\"modal__close\">&times;</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div>\r\n            `;\r\n            document.querySelector('.modal').append(thanksModal);\r\n    \r\n            setTimeout(() => {\r\n                thanksModal.remove();\r\n                prevModalDialog.classList.add('show');\r\n                prevModalDialog.classList.remove('hide');\r\n                close('.modal');\r\n            },4000);\r\n    \r\n        }\r\n    \r\n        // fetch('http://localhost:3000/menu').then(data => data.json()).then(res => console.log(res));\r\n    \r\n}\r\n\r\nexport default forms;","function open(modalSelector, timerOpenId) {\r\n    const modalWindow = document.querySelector(modalSelector);\r\n    modalWindow.classList.add('show');\r\n    modalWindow.classList.remove('hide');\r\n    document.body.style.overflow = 'hidden';\r\n        if (timerOpenId) {\r\n            clearInterval(timerOpenId);\r\n        }\r\n}\r\n\r\nfunction close(modalSelector) {\r\n    const modalWindow = document.querySelector(modalSelector);\r\n    modalWindow.classList.add('hide');\r\n    modalWindow.classList.remove('show');\r\n    document.body.style.overflow = 'visible';\r\n}\r\n\r\nfunction modal(openModalSelector, modalSelector, timerOpenId) {\r\n    // Modal\r\n\r\n    const   openModal = document.querySelectorAll(openModalSelector),\r\n            modalWindow = document.querySelector(modalSelector);\r\n\r\n    openModal.forEach(item => {\r\n        item.addEventListener('click', () => open(modalSelector));\r\n    });\r\n\r\n\r\n    modalWindow.addEventListener('click', (e) => {\r\n        if (e.target === modalWindow || e.target.getAttribute('data-close') == '') {\r\n            close(modalSelector);\r\n        }\r\n    });\r\n    document.addEventListener('keydown', (e) => {\r\n        if (e.code === \"Escape\" && modalWindow.classList.contains('show')) {\r\n            close(modalSelector);\r\n        }\r\n    });\r\n\r\n    function showModalByScroll() {\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\r\n            open(modalSelector, timerOpenId);\r\n            window.removeEventListener('scroll', showModalByScroll);\r\n        }\r\n    }\r\n\r\n    window.addEventListener('scroll', showModalByScroll);\r\n}\r\n\r\nexport default modal;\r\nexport {close, open};","function slider({container, slide, nextArrow, prevArrow, totalCounter, currentCounter, wrapper, field}) {\r\n            // slider\r\n\r\n            const slides = document.querySelectorAll(slide),\r\n            prev = document.querySelector(prevArrow),\r\n            next = document.querySelector(nextArrow),\r\n            current = document.querySelector(currentCounter),\r\n            total = document.querySelector(totalCounter),\r\n            slider = document.querySelector(container),\r\n            slideswrapper = document.querySelector(wrapper),\r\n            slidesField = document.querySelector(field), // элемент в котором наши картинки идут подряд(лента)\r\n            width = window.getComputedStyle(slideswrapper).width; // ширина обертки нашего слайдера для конечного пользователя\r\n\r\n    let slideIndex = 1;\r\n    let offset = 0;\r\n\r\n    if (slides.length < 10) {\r\n        total.textContent = `0${slides.length}`;\r\n        current.textContent = `0${slideIndex}`;\r\n    } else {\r\n        total.textContent = slides.length;\r\n        current.textContent = slideIndex;\r\n    }\r\n\r\n    slidesField.style.width = 100 * slides.length + '%'; // задаем ширину нашего элемента с картинками равного количеству картинок умноженного на 100%\r\n\r\n    slider.style.position = 'relative';\r\n\r\n    const indicators = document.createElement('ol'),\r\n            dots = [];\r\n\r\n    indicators.style.cssText = `\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        z-index: 15;\r\n        display: flex;\r\n        justify-content: center;\r\n        margin-right: 15%;\r\n        margin-left: 15%;\r\n        list-style: none;\r\n    `;\r\n    slider.append(indicators);\r\n\r\n    for (let i = 0; i < slides.length; i++) {\r\n        const dot = document.createElement('li');\r\n        dot.setAttribute('data-slide-to', i + 1);\r\n        dot.style.cssText = `\r\n            box-sizing: content-box;\r\n            flex: 0 1 auto;\r\n            width: 30px;\r\n            height: 6px;\r\n            margin-right: 3px;\r\n            margin-left: 3px;\r\n            cursor: pointer;\r\n            background-color: #fff;\r\n            background-clip: padding-box;\r\n            border-top: 10px solid transparent;\r\n            border-bottom: 10px solid transparent;\r\n            opacity: .5;\r\n            transition: opacity .6s ease;\r\n        `;\r\n        indicators.append(dot);\r\n\r\n        dots.push(dot);\r\n\r\n        if (i == 0) {\r\n            dot.style.opacity = 1;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    slides.forEach (item => {\r\n        item.style.width = width; // задаем ширину каждой картинки равной ширине нашей оберкти\r\n    });\r\n\r\n    slidesField.style.display = 'flex'; // выстраиваем нашу ленту в ряд \r\n    slidesField.style.transition = '0.5s all'; // анимация\r\n    slideswrapper.style.overflow = 'hidden'; // скрываем все, что за пределами нашей обертки\r\n\r\n    function dotOpacity() {\r\n        dots.forEach(dot => dot.style.opacity = '0.5');\r\n        dots[slideIndex - 1].style.opacity = 1;\r\n    }\r\n\r\n    function currentValue() {\r\n        if (slides.length < 10) { // присваиваем текущему значению значение нашего счетчика\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n    }\r\n\r\n    function deleteNoDiggits(str) {\r\n        return +str.replace(/\\D/g, '');\r\n    }\r\n\r\n    next.addEventListener('click', () => {\r\n        if (offset == deleteNoDiggits(width) * (slides.length - 1)) { // условие перехода в начало\r\n            offset = 0;\r\n        } else {\r\n            offset += deleteNoDiggits(width);\r\n        }\r\n        slidesField.style.transform = `translateX(-${offset}px)`; // сдвигаем по оси Х нашу ленту на количество пикселей равной ширине одной картинки\r\n\r\n        if (slideIndex == slides.length) { // сбрасываем счетчик\r\n            slideIndex = 1;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n\r\n        currentValue();\r\n\r\n        dotOpacity();\r\n\r\n    });\r\n\r\n    prev.addEventListener('click', () => {\r\n        if (offset == 0) {\r\n            offset = deleteNoDiggits(width) * (slides.length - 1);\r\n        } else {\r\n            offset -= deleteNoDiggits(width);\r\n        }\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == 1) {\r\n            slideIndex = slides.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n\r\n        currentValue();\r\n\r\n        dotOpacity();\r\n\r\n    });\r\n\r\n    dots.forEach((dot) => {\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = e.target.getAttribute('data-slide-to');\r\n            slideIndex = slideTo;\r\n\r\n            currentValue();\r\n\r\n            offset = deleteNoDiggits(width) * (slideTo - 1);\r\n            slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n            dotOpacity();\r\n        });\r\n    });\r\n\r\n    // simple slider\r\n\r\n    //     if (slides.length < 10) {\r\n    //         total.textContent = `0${slides.length}`;\r\n    //     } else {\r\n    //         total.textContent = slides.length;\r\n    //     }\r\n\r\n\r\n    //     slider(slideIndex);\r\n\r\n    //     function slider(n) {\r\n        // if (n> slides.length) {\r\n        //     slideIndex = 1;\r\n        // }\r\n        // if (n < 1) {\r\n        //     slideIndex = slides.length;\r\n        // }\r\n    //         slides.forEach(item => item.style.display = 'none');\r\n    //         slides[slideIndex -1].style.display = 'block';\r\n\r\n    //         if (slides.length < 10) {\r\n    //             current.textContent = `0${slideIndex}`;\r\n    //         } else {\r\n    //             current.textContent = slideIndex;\r\n    //         }\r\n    \r\n\r\n    //     }\r\n\r\n    //     function nextSlide(n) {\r\n    //         slider(slideIndex += n);\r\n    //     }\r\n\r\n    //     prev.addEventListener('click', () => {\r\n    //         nextSlide(-1);\r\n    //     });\r\n    \r\n    //     next.addEventListener('click', () => {\r\n    //         nextSlide(1);\r\n    //     });\r\n\r\n}\r\n\r\nexport default slider;","function tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activeClass ) {\r\n        //Tabs\r\n\r\n        const   tabs = document.querySelectorAll(tabsSelector),\r\n        tabsContent = document.querySelectorAll(tabsContentSelector),\r\n        tabsParent = document.querySelector(tabsParentSelector);\r\n\r\n        function hideTabContent() {\r\n            tabsContent.forEach(item => {\r\n                item.classList.add('hide');\r\n                item.classList.remove('show', 'fade');\r\n            });\r\n            tabs.forEach(item => {\r\n                item.classList.remove(activeClass);\r\n            });\r\n        }\r\n\r\n        function showTabContent(i = 0) {\r\n            tabsContent[i].classList.remove('hide');\r\n            tabsContent[i].classList.add('show', 'fade');\r\n            tabs[i].classList.add(activeClass);\r\n        }\r\n\r\n        hideTabContent();\r\n        showTabContent();\r\n\r\n        tabsParent.addEventListener('click', (event) => {\r\n            const target = event.target;\r\n\r\n            if (target && target.classList.contains(tabsSelector.slice(1))) {\r\n                tabs.forEach((item,i) => {\r\n                    if (target == item) {\r\n                        hideTabContent();\r\n                        showTabContent(i);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n}\r\n\r\nexport default tabs;","function timer(id, deadline) {\r\n        //Timer\r\n    \r\n        function timeDifference(end) { // функция для рассчета оставшегося времени\r\n            const   t = Date.parse(end) - Date.parse(new Date()), // в милисекундах, дальше дробим на дни, часы, минуты\r\n                    days = Math.floor(t / (1000*60*60*24)), \r\n                    hours = Math.floor((t / (1000*60*60)) % 24),\r\n                    minutes = Math.floor(t / (1000*60) % 60),\r\n                    seconds = Math.floor(t / 1000 % 60);\r\n            return { // вывод в объект\r\n                'total' : t,\r\n                'days' : days,\r\n                'hours' : hours,\r\n                'minutes' : minutes,\r\n                'seconds' : seconds\r\n            };\r\n        }\r\n    \r\n        function zeroBefore(arg) { // функция для приписки нолика к однозначному числу\r\n            if (arg >= 0 && arg < 10) {\r\n                return `0${arg}`;\r\n            } else {\r\n                return arg;\r\n            }\r\n        }\r\n    \r\n        function setClock(id, end) { // Основная функция, для вывода оставшегося времени \r\n            const   timer = document.querySelector(id), // получаем форму таймера со страницы, дальше получаем объекты с этой формы (дни, часы, минуты и тд)\r\n                    days = timer.querySelector('#days'),\r\n                    hours = timer.querySelector('#hours'),\r\n                    minutes = timer.querySelector('#minutes'),\r\n                    seconds = timer.querySelector('#seconds');\r\n    \r\n            setInterval(refreshTime, 1000); // интервал для функции ниже\r\n            refreshTime();\r\n    \r\n            function refreshTime() { // функция, выводит время на страницу\r\n                const t = timeDifference(end); \r\n    \r\n                days.innerHTML = zeroBefore(t.days); \r\n                hours.innerHTML = zeroBefore(t.hours);\r\n                minutes.innerHTML = zeroBefore(t.minutes);\r\n                seconds.innerHTML = zeroBefore(t.seconds);\r\n                if (t.total == 0) {\r\n                    clearInterval(refreshTime); // по истечению времени очищает интервал\r\n                }\r\n            }\r\n        }\r\n        setClock(id, deadline); //запускаем основную функцию, передаем в нее дедлайн\r\n    \r\n}\r\n\r\nexport default timer;","const postData = async(url, data) => {\r\n    const res = await fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        //body: formData альтернативный метод JSON - у\r\n        body: data\r\n    });\r\n    return await res.json();\r\n};\r\n    // Получаем наши карточки с БД json\r\n    const getResource = async(url) => {\r\n        const res = await fetch(url);\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n        return await res.json();\r\n        };\r\n\r\n\r\nexport {postData};\r\nexport {getResource};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import tabs from './modules/tabs';\nimport modal from './modules/modal';\nimport slider from './modules/slider';\nimport timer from './modules/timer';\nimport forms from './modules/forms';\nimport cards from './modules/cards';\nimport calc from './modules/calc';\nimport {open} from './modules/modal';\n\n\nwindow.addEventListener('DOMContentLoaded', () => {\n    const timerOpenId = setTimeout(() => open('.modal', timerOpenId), 50000);\n\n    tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\n    modal('[data-modal]', '.modal', timerOpenId);\n    slider({\n        container: '.offer__slider', \n        slide: '.offer__slide', \n        nextArrow: '.offer__slider-next', \n        prevArrow: '.offer__slider-prev', \n        totalCounter: '#total', \n        currentCounter: '#current', \n        wrapper: '.offer__slider-wrapper', \n        field: '.offer__slider-inner'\n    });\n    timer('.timer', '2021-04-11');\n    forms('form', timerOpenId);\n    cards();\n    calc();\n});\n\n"],"sourceRoot":""}